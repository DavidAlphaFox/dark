module UserDefined =
  let stringConst = "test"
  stringConst = "test"
  "test" = stringConst
  UserDefined.stringConst = "test"

  let intConst = 5L
  intConst = 5L
  UserDefined.intConst = 5L

  let int32Const = 5l
  int32Const = 5l
  UserDefined.int32Const = 5l

  let uint32Const = 5ul
  uint32Const = 5ul
  UserDefined.uint32Const = 5ul


  let floatConst = 5.6
  floatConst = 5.6
  UserDefined.floatConst = 5.6

  let boolConst = true
  boolConst = true
  UserDefined.boolConst = true

  let tupleConst = (1L, 2L, 3L)
  tupleConst = (1L, 2L, 3L)
  UserDefined.tupleConst = (1L, 2L, 3L)

  let charConst = 'c'
  charConst = 'c'
  UserDefined.charConst = 'c'

  let unitConst = ()
  unitConst = ()
  UserDefined.unitConst = ()

  let enumConst = PACKAGE.Darklang.Stdlib.Option.Option.Some 5L
  enumConst = PACKAGE.Darklang.Stdlib.Option.Option.Some 5L
  UserDefined.enumConst = PACKAGE.Darklang.Stdlib.Option.Option.Some 5L

  Ok 5L = Builtin.Test.derrorMessage
    "Missing type name for enum case: Ok\n\nActual: `Ok`"


module Package =
  PACKAGE.Darklang.Test.Constants.stringConst = "test"
  "test" = PACKAGE.Darklang.Test.Constants.stringConst
  PACKAGE.Darklang.Test.Constants.stringConst = "test"


  PACKAGE.Darklang.Test.Constants.intConst = 5L
  PACKAGE.Darklang.Test.Constants.intConst = 5L


  PACKAGE.Darklang.Test.Constants.floatConst = 5.6
  PACKAGE.Darklang.Test.Constants.floatConst = 5.6

  PACKAGE.Darklang.Test.Constants.boolConst = true
  PACKAGE.Darklang.Test.Constants.boolConst = true

  PACKAGE.Darklang.Test.Constants.tupleConst = (1L, 2L, 3L)
  PACKAGE.Darklang.Test.Constants.tupleConst = (1L, 2L, 3L)

  PACKAGE.Darklang.Test.Constants.charConst = 'c'
  PACKAGE.Darklang.Test.Constants.charConst = 'c'

  PACKAGE.Darklang.Test.Constants.unitConst = ()
  PACKAGE.Darklang.Test.Constants.unitConst = ()

  PACKAGE.Darklang.Test.Constants.enumConst = PACKAGE.Darklang.Stdlib.Option.Option.Some
    5L

  PACKAGE.Darklang.Test.Constants.enumConst = PACKAGE.Darklang.Stdlib.Option.Option.Some
    5L
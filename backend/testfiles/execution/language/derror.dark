module Error =
  // Stdlib.List.map_v0 [ 1L; 2L; 3L; 4L; 5L ] (fun x y -> x) =
  //   // Lol - now, this returns a list of lambdas.
  //   Builtin.testDerrorMessage "Expected 2 arguments, got 1"

  // TODO fn arg type-checking
  // (Stdlib.Option.map2_v0
  //   (Stdlib.Option.Option.Some 10L)
  //   "not an option"
  //   (fun (a, b) -> "1")
  //  ) = (Builtin.testDerrorMessage "TODOasedf")


// Check we get previous errors before later ones
// (Stdlib.List.map_v0 [ 1L; 2L; 3L; 4L; 5L ] (fun x -> Builtin.testRuntimeError "X"))
// |> Stdlib.List.fakeFunction = Builtin.testDerrorMessage "X"
// CLEANUP currently instead errors with `Stdlib.List.fakeFunction not found`



module ErrorPropagation =
  // Stdlib.List.head (Builtin.testRuntimeError "test") =
  //   Builtin.testDerrorMessage "test"

  // (if Builtin.testRuntimeError "test" then 5L else 6L) =
  //   Builtin.testDerrorMessage "test"

  // (Stdlib.List.head (Builtin.testRuntimeError "test")).field =
  //   Builtin.testDerrorMessage "test"

  // [ 5L; 6L; Stdlib.List.head (Builtin.testRuntimeError "test") ] =
  //   Builtin.testDerrorMessage "test"

  // [ 5L; 6L; Builtin.testRuntimeError "test" ] =
  //   Builtin.testDerrorMessage "test"


  // 5L |> (+) (Builtin.testRuntimeError "test") |> (+) 3564L =
  //   Builtin.testDerrorMessage "test"

  // 5L |> (+) (Builtin.testRuntimeError "test") =
  //   Builtin.testDerrorMessage "test"

  // ("test" |> Builtin.testRuntimeError) =
  //   Builtin.testDerrorMessage "test"

  // Stdlib.Option.Option.Some(Builtin.testRuntimeError "test") =
  //   Builtin.testDerrorMessage "test"

  // Stdlib.Result.Result.Error(Builtin.testRuntimeError "test") =
  //   Builtin.testDerrorMessage "test"

  // Stdlib.Result.Result.Ok(Builtin.testRuntimeError "test") =
  //   Builtin.testDerrorMessage "test"


  // // pipe into error
  // ("test" |> Builtin.testRuntimeError |> (++) "3") =
  //   Builtin.testDerrorMessage "test"


  type EPRec =
    { i: Int64
      m: Int64
      j: Int64
      n: Int64 }

  // EPRec
  //   { i = Builtin.testRuntimeError "1"
  //     m = 5L
  //     j = Stdlib.List.head (Builtin.testRuntimeError "2")
  //     n = 6L } = Builtin.testDerrorMessage "1"
PACKAGE.Darklang.Stdlib.Result.andThen
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "test")
  (fun x -> PACKAGE.Darklang.Stdlib.Result.Result.Error "test") = PACKAGE.Darklang.Stdlib.Result.Result.Error
  "test"

PACKAGE.Darklang.Stdlib.Result.andThen
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "test")
  (fun x -> PACKAGE.Darklang.Stdlib.Result.Result.Ok 5L) = PACKAGE.Darklang.Stdlib.Result.Result.Error
  "test"

PACKAGE.Darklang.Stdlib.Result.andThen
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 5L)
  (fun x -> PACKAGE.Darklang.Stdlib.Result.Result.Error "test") = PACKAGE.Darklang.Stdlib.Result.Result.Error
  "test"

PACKAGE.Darklang.Stdlib.Result.andThen
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 5L)
  (fun x -> PACKAGE.Darklang.Stdlib.Result.Result.Ok(1L + x)) = PACKAGE.Darklang.Stdlib.Result.Result.Ok
  6L


PACKAGE.Darklang.Stdlib.Result.collect
  [ PACKAGE.Darklang.Stdlib.Result.Result.Ok 5L
    PACKAGE.Darklang.Stdlib.Result.Result.Ok 6L
    PACKAGE.Darklang.Stdlib.Result.Result.Ok 7L ] = PACKAGE.Darklang.Stdlib.Result.Result.Ok
  [ 5L; 6L; 7L ]

PACKAGE.Darklang.Stdlib.Result.collect
  [ PACKAGE.Darklang.Stdlib.Result.Result.Ok 5L
    PACKAGE.Darklang.Stdlib.Result.Result.Error "test"
    PACKAGE.Darklang.Stdlib.Result.Result.Ok 7L ] = PACKAGE.Darklang.Stdlib.Result.Result.Error
  "test"

PACKAGE.Darklang.Stdlib.Result.collect
  [ PACKAGE.Darklang.Stdlib.Result.Result.Ok 5L
    PACKAGE.Darklang.Stdlib.Result.Result.Error "test"
    PACKAGE.Darklang.Stdlib.Result.Result.Error "test2" ] = PACKAGE.Darklang.Stdlib.Result.Result.Error
  "test"

PACKAGE.Darklang.Stdlib.Result.collect
  [ PACKAGE.Darklang.Stdlib.Result.Result.Error "test"
    PACKAGE.Darklang.Stdlib.Result.Result.Error "test2" ] = PACKAGE.Darklang.Stdlib.Result.Result.Error
  "test"

PACKAGE.Darklang.Stdlib.Result.collect [] = PACKAGE.Darklang.Stdlib.Result.Result.Ok
  []



PACKAGE.Darklang.Stdlib.Result.fromOption
  (PACKAGE.Darklang.Stdlib.Option.Option.Some 6L)
  "test" = PACKAGE.Darklang.Stdlib.Result.Result.Ok 6L

PACKAGE.Darklang.Stdlib.Result.fromOption
  PACKAGE.Darklang.Stdlib.Option.Option.None
  "test" = PACKAGE.Darklang.Stdlib.Result.Result.Error "test"

PACKAGE.Darklang.Stdlib.Result.fromOption
  (PACKAGE.Darklang.Stdlib.Option.Option.Some(
    PACKAGE.Darklang.Stdlib.Result.Result.Error "test"
  ))
  "test" = PACKAGE.Darklang.Stdlib.Result.Result.Ok(
  PACKAGE.Darklang.Stdlib.Result.Result.Error "test"
)

PACKAGE.Darklang.Stdlib.Result.fromOption
  PACKAGE.Darklang.Stdlib.Option.Option.None
  (1L, 2L, 3L) = PACKAGE.Darklang.Stdlib.Result.Result.Error((1L, 2L, 3L))

PACKAGE.Darklang.Stdlib.Result.fromOption
  PACKAGE.Darklang.Stdlib.Option.Option.None
  PACKAGE.Darklang.Stdlib.Option.Option.None = PACKAGE.Darklang.Stdlib.Result.Result.Error
  PACKAGE.Darklang.Stdlib.Option.Option.None



PACKAGE.Darklang.Stdlib.Result.map2_v0
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "error1")
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "error2")
  (fun a b -> a - b) = PACKAGE.Darklang.Stdlib.Result.Result.Error "error1"

PACKAGE.Darklang.Stdlib.Result.map2_v0
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "error1")
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 1L)
  (fun a b -> a - b) = PACKAGE.Darklang.Stdlib.Result.Result.Error "error1"

PACKAGE.Darklang.Stdlib.Result.map2_v0
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 10L)
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "error2")
  (fun a b -> a - b) = PACKAGE.Darklang.Stdlib.Result.Result.Error "error2"

PACKAGE.Darklang.Stdlib.Result.map2_v0
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 10L)
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 1L)
  (fun a b -> a - b) = PACKAGE.Darklang.Stdlib.Result.Result.Ok 9L



PACKAGE.Darklang.Stdlib.Result.map3_v0
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "error1")
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "error2")
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "error3")
  (fun a b c -> a - b - c) = PACKAGE.Darklang.Stdlib.Result.Result.Error "error1"

PACKAGE.Darklang.Stdlib.Result.map3_v0
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "error1")
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "error2")
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 1L)
  (fun a b c -> a - b - c) = PACKAGE.Darklang.Stdlib.Result.Result.Error "error1"

PACKAGE.Darklang.Stdlib.Result.map3_v0
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 10L)
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "error2")
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "error3")
  (fun a b c -> a - b - c) = PACKAGE.Darklang.Stdlib.Result.Result.Error "error2"

PACKAGE.Darklang.Stdlib.Result.map3_v0
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 10L)
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 1L)
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "error3")
  (fun a b c -> a - b - c) = PACKAGE.Darklang.Stdlib.Result.Result.Error "error3"

PACKAGE.Darklang.Stdlib.Result.map3_v0
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 10L)
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 1L)
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 1L)
  (fun a b c -> a - b - c) = PACKAGE.Darklang.Stdlib.Result.Result.Ok 8L


PACKAGE.Darklang.Stdlib.Result.map4_v0
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "error1")
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "error2")
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "error3")
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "error4")
  (fun a b c d -> a - b - c - d) = PACKAGE.Darklang.Stdlib.Result.Result.Error
  "error1"

PACKAGE.Darklang.Stdlib.Result.map4_v0
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "error1")
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "error2")
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "error3")
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 1L)
  (fun a b c d -> a - b - c - d) = PACKAGE.Darklang.Stdlib.Result.Result.Error
  "error1"

PACKAGE.Darklang.Stdlib.Result.map4_v0
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 10L)
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 1L)
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 1L)
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "error4")
  (fun a b c d -> a - b - c - d) = PACKAGE.Darklang.Stdlib.Result.Result.Error
  "error4"

PACKAGE.Darklang.Stdlib.Result.map4_v0
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 10L)
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 1L)
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 1L)
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 2L)
  (fun a b c d -> a - b - c - d) = PACKAGE.Darklang.Stdlib.Result.Result.Ok 6L


PACKAGE.Darklang.Stdlib.Result.map5_v0
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "error1")
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "error2")
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "error3")
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "error4")
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "error5")
  (fun a b c d e -> a - b - c - d - e) = PACKAGE.Darklang.Stdlib.Result.Result.Error
  "error1"

PACKAGE.Darklang.Stdlib.Result.map5_v0
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "error1")
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "error2")
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "error3")
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "error4")
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 1L)
  (fun a b c d e -> a - b - c - d - e) = PACKAGE.Darklang.Stdlib.Result.Result.Error
  "error1"

PACKAGE.Darklang.Stdlib.Result.map5_v0
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 10L)
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 1L)
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 1L)
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 2L)
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "error5")
  (fun a b c d e -> a - b - c - d - e) = PACKAGE.Darklang.Stdlib.Result.Result.Error
  "error5"

PACKAGE.Darklang.Stdlib.Result.map5_v0
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 10L)
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 1L)
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 1L)
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 2L)
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 3L)
  (fun a b c d e -> a - b - c - d - e) = PACKAGE.Darklang.Stdlib.Result.Result.Ok 3L



PACKAGE.Darklang.Stdlib.Result.mapWithDefault_v0
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "test")
  5L
  (fun x -> x + 1L) = 5L

PACKAGE.Darklang.Stdlib.Result.mapWithDefault_v0
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 6L)
  5L
  (fun x -> x + 1L) = 7L

PACKAGE.Darklang.Stdlib.Result.mapWithDefault_v0
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "test1")
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "test2")
  (fun x -> x + 1L) = PACKAGE.Darklang.Stdlib.Result.Result.Error "test2"



PACKAGE.Darklang.Stdlib.Result.mapError
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "test")
  (fun x -> PACKAGE.Darklang.Stdlib.String.append x "-appended") = PACKAGE.Darklang.Stdlib.Result.Result.Error
  "test-appended"

PACKAGE.Darklang.Stdlib.Result.mapError
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 4L)
  (fun x -> PACKAGE.Darklang.Stdlib.Int64.divide_v0 x 2L) = PACKAGE.Darklang.Stdlib.Result.Result.Ok
  4L


PACKAGE.Darklang.Stdlib.Result.map
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "test")
  (fun x -> PACKAGE.Darklang.Stdlib.Int64.divide_v0 x 2L) = PACKAGE.Darklang.Stdlib.Result.Result.Error
  "test"

PACKAGE.Darklang.Stdlib.Result.map
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 4L)
  (fun x -> PACKAGE.Darklang.Stdlib.Int64.divide_v0 x 2L) = PACKAGE.Darklang.Stdlib.Result.Result.Ok
  2L



PACKAGE.Darklang.Stdlib.Result.toOption (
  PACKAGE.Darklang.Stdlib.Result.Result.Ok "test"
) = PACKAGE.Darklang.Stdlib.Option.Option.Some "test"

PACKAGE.Darklang.Stdlib.Result.toOption (
  PACKAGE.Darklang.Stdlib.Result.Result.Error "test"
) = PACKAGE.Darklang.Stdlib.Option.Option.None



PACKAGE.Darklang.Stdlib.Result.withDefault_v0
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "test")
  5L = 5L

PACKAGE.Darklang.Stdlib.Result.withDefault_v0
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok 6L)
  5L = 6L



PACKAGE.Darklang.Stdlib.Result.isOk_v0 (
  PACKAGE.Darklang.Stdlib.Result.Result.Ok "test"
) = true

PACKAGE.Darklang.Stdlib.Result.isOk_v0 (
  PACKAGE.Darklang.Stdlib.Result.Result.Error "test"
) = false


PACKAGE.Darklang.Stdlib.Result.isError_v0 (
  PACKAGE.Darklang.Stdlib.Result.Result.Ok "test"
) = false

PACKAGE.Darklang.Stdlib.Result.isError_v0 (
  PACKAGE.Darklang.Stdlib.Result.Result.Error "test"
) = true


PACKAGE.Darklang.Stdlib.Result.and_v0
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok "test1")
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok "test2") = PACKAGE.Darklang.Stdlib.Result.Result.Ok
  "test2"

PACKAGE.Darklang.Stdlib.Result.and_v0
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok "test1")
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "test2") = PACKAGE.Darklang.Stdlib.Result.Result.Error
  "test2"

PACKAGE.Darklang.Stdlib.Result.and_v0
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "test1")
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok "test2") = PACKAGE.Darklang.Stdlib.Result.Result.Error
  "test1"

PACKAGE.Darklang.Stdlib.Result.and_v0
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "test1")
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "test2") = PACKAGE.Darklang.Stdlib.Result.Result.Error
  "test1"


PACKAGE.Darklang.Stdlib.Result.or_v0
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok "test1")
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok "test2") = PACKAGE.Darklang.Stdlib.Result.Result.Ok
  "test1"

PACKAGE.Darklang.Stdlib.Result.or_v0
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok "test1")
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "test2") = PACKAGE.Darklang.Stdlib.Result.Result.Ok
  "test1"

PACKAGE.Darklang.Stdlib.Result.or_v0
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "test1")
  (PACKAGE.Darklang.Stdlib.Result.Result.Ok "test2") = PACKAGE.Darklang.Stdlib.Result.Result.Ok
  "test2"

PACKAGE.Darklang.Stdlib.Result.or_v0
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "test1")
  (PACKAGE.Darklang.Stdlib.Result.Result.Error "test2") = PACKAGE.Darklang.Stdlib.Result.Result.Error
  "test2"


PACKAGE.Darklang.Stdlib.Result.toList_v0 (
  PACKAGE.Darklang.Stdlib.Result.Result.Ok "test"
) = [ "test" ]

PACKAGE.Darklang.Stdlib.Result.toList_v0 (
  PACKAGE.Darklang.Stdlib.Result.Result.Error "test"
) = []


PACKAGE.Darklang.Stdlib.Result.join_v0 (
  PACKAGE.Darklang.Stdlib.Result.Result.Ok(
    PACKAGE.Darklang.Stdlib.Result.Result.Ok "test"
  )
) = PACKAGE.Darklang.Stdlib.Result.Result.Ok "test"

PACKAGE.Darklang.Stdlib.Result.join_v0 (
  PACKAGE.Darklang.Stdlib.Result.Result.Ok(
    PACKAGE.Darklang.Stdlib.Result.Result.Error "test"
  )
) = PACKAGE.Darklang.Stdlib.Result.Result.Error "test"

PACKAGE.Darklang.Stdlib.Result.join_v0 (
  PACKAGE.Darklang.Stdlib.Result.Result.Error "test"
) = PACKAGE.Darklang.Stdlib.Result.Result.Error "test"


PACKAGE.Darklang.Stdlib.Result.combine_v0
  [ PACKAGE.Darklang.Stdlib.Result.Result.Ok 1L
    PACKAGE.Darklang.Stdlib.Result.Result.Ok 2L
    PACKAGE.Darklang.Stdlib.Result.Result.Ok 3L ] = PACKAGE.Darklang.Stdlib.Result.Result.Ok
  [ 1L; 2L; 3L ]

PACKAGE.Darklang.Stdlib.Result.combine_v0
  [ PACKAGE.Darklang.Stdlib.Result.Result.Ok 1L
    PACKAGE.Darklang.Stdlib.Result.Result.Error "test"
    PACKAGE.Darklang.Stdlib.Result.Result.Ok 3L ] = PACKAGE.Darklang.Stdlib.Result.Result.Error
  "test"

PACKAGE.Darklang.Stdlib.Result.combine_v0
  [ PACKAGE.Darklang.Stdlib.Result.Result.Error "test1"
    PACKAGE.Darklang.Stdlib.Result.Result.Error "test2" ] = PACKAGE.Darklang.Stdlib.Result.Result.Error
  "test1"

PACKAGE.Darklang.Stdlib.Result.combine_v0 [] = PACKAGE.Darklang.Stdlib.Result.Result.Ok
  []


PACKAGE.Darklang.Stdlib.Result.values_v0
  [ PACKAGE.Darklang.Stdlib.Result.Result.Ok 1L
    PACKAGE.Darklang.Stdlib.Result.Result.Ok 2L
    PACKAGE.Darklang.Stdlib.Result.Result.Ok 3L ] = PACKAGE.Darklang.Stdlib.Result.Result.Ok
  [ 1L; 2L; 3L ]

PACKAGE.Darklang.Stdlib.Result.values_v0
  [ PACKAGE.Darklang.Stdlib.Result.Result.Ok 1L
    PACKAGE.Darklang.Stdlib.Result.Result.Error "test"
    PACKAGE.Darklang.Stdlib.Result.Result.Ok 3L ] = PACKAGE.Darklang.Stdlib.Result.Result.Ok
  [ 1L; 3L ]

PACKAGE.Darklang.Stdlib.Result.values_v0
  [ PACKAGE.Darklang.Stdlib.Result.Result.Error "test1"
    PACKAGE.Darklang.Stdlib.Result.Result.Error "test2" ] = PACKAGE.Darklang.Stdlib.Result.Result.Ok
  []

PACKAGE.Darklang.Stdlib.Result.values_v0 [] = PACKAGE.Darklang.Stdlib.Result.Result.Ok
  []
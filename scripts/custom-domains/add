#!/usr/bin/env bash

. ./scripts/devcontainer/_assert-in-container "$0" "$@"

set -eou pipefail

PATH=~/.local/bin:$PATH

HELP="$(cat <<EOF
Usage: $0 DOMAIN

Sets up DOMAIN with a letsencrypt cert - note, you must have CNAME'd domain ->
<some_canvas>.darkcustomdomain.com. We'll confirm (using dig) that the CNAME is
in place, and extract the desired canvas name from it.

Once that's done, we:
- add a record to the db that webserver.ml will use to route domain->canvas
- add annotations (rules.hosts[] and tls[]) to the darkcustomdomain-tls-ingress,
  that cert-manager notices and sets up a cert for (talks to Let's Encrypt and
stores the provisioned cert in a k8s secret)

For more docs, see docs/custom-domains.md and the spec at
https://www.notion.so/darklang/Custom-domains-take-2-c9f04210ec94422695f91bc870bf117e
EOF
)"

if [[ $# -ne 1 || "$1" == '--help' ]]; then
    echo "$HELP"
    exit 1
fi

DOMAIN=$1

echo "Checking if $DOMAIN has a CNAME pointing at <something>.darkcustomdomain.com..."
CANVAS=$(./scripts/custom-domains/get-canvas "$DOMAIN")
echo "Found it: ${CANVAS}"
echo "Adding the domain to the DB"
./scripts/custom-domains/_add-to-db "${DOMAIN}" "${CANVAS}"
echo "Adding the domain to cert manager"
./scripts/custom-domains/_add-to-cert-manager "${DOMAIN}"
./scripts/custom-domains/check-consistency
./scripts/custom-domains/_check-cert-added "${DOMAIN}"

#!/usr/bin/env bash
. ./scripts/devcontainer/_assert-in-container "$0" "$@"

set -eou pipefail

HELP="$(cat <<EOF
Usage: $0

Compares the three different places that custom domains are stored to see if
anything has gone wrong.

The three places are:
- the custom_domains table in the DB
- the .spec.tls array in darkcustomdomain-l4-ingress
- the .spec.rules in darkcustomdomain-l4-ingress

For more docs, see docs/custom-domains.md
EOF
)"

if [[ $# -eq 1 && "$1" == '--help' ]]; then
    echo "$HELP"
    exit 1
fi

# This tmpfile crap is because for some reason gcp-psql hangs when put into a
# subshell ( foo=$(... | ./scripts/production/gcp-psql) ) or when its output is piped to
# another command (... | ./scripts/production/gcp-psql | grep ...)
tmpfile=$(mktemp /tmp/custom_domain.XXXXXX)
select_query="SELECT host FROM custom_domains"
echo "\\copy (${select_query}) TO ${tmpfile}" \
    | ./scripts/production/gcp-psql --production
DBHOSTS=$(sort ${tmpfile})

CERTMANAGER_JSON=$(kubectl get ingress darkcustomdomain-l4-ingress -o json)
TLSES=$(printf "%s" "${CERTMANAGER_JSON}" \
  | jq -r '.spec.tls | map ( .hosts[0] ) | sort | .[] ' \
  | grep -v ops-placeholder.darkcustomdomain.com)
RULES=$(printf "%s" "${CERTMANAGER_JSON}" \
  | jq -r '.spec.rules | map ( .host ) | sort | .[] ' \
  | grep -v ops-placeholder.darkcustomdomain.com)
# the letsencrypt-prod filter skips the wildcards which are not part of custom-domains
CERTS=$(kubectl get certs -o json \
  | jq -r '.items | map (select ( .spec.issuerRef.name == "letsencrypt-prod" )) | map ( .spec.dnsNames[0] ) | sort | .[] ' \
  | grep -v ops-placeholder.darkcustomdomain.com)

if [[ "${TLSES}"x == "${DBHOSTS}"x && "${RULES}"x == "${DBHOSTS}"x && "${CERTS}"x == "${DBHOSTS}"x ]]; then
  echo -e "\nAll entries match"
  echo "${DBHOSTS}"
  echo -e "\nAll entries match"
else
  echo -e "ERROR: Entries do not all match"
  echo -e "DB: \n${DBHOSTS}\n"
  echo -e "TLS: \n${TLSES}\n"
  echo -e "Rules: \n${RULES}\n"
  echo -e "Certs: \n${CERTS}\n"

  echo "DB hosts vs Rules:"
  diff <(echo "${DBHOSTS}") <(echo "${RULES}") || true
  echo -e "\nDB hosts vs TLSes:"
  diff <(echo "${DBHOSTS}") <(echo "${TLSES}") || true
  echo -e "\nDB hosts vs certs:"
  diff <(echo "${DBHOSTS}") <(echo "${CERTS}") || true

  echo -e "\nDB    sha: $(echo ${DBHOSTS} | sha1sum )"
  echo -e "TLS   sha: $(echo ${TLSES} | sha1sum )"
  echo -e "Rules sha: $(echo ${RULES} | sha1sum )\n"
  echo -e "Certs sha: $(echo ${CERTS} | sha1sum )\n"
  echo -e "ERROR: Entries do not all match"
  exit 1
fi

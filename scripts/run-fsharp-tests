#!/usr/bin/env bash
. ./scripts/devcontainer/_assert-in-container "$0" "$@"

set -euo pipefail

trap ctrl_c INT

function ctrl_c() {
  killall -9 Tests
  exit 1
}

DEBUG=false
PUBLISHED=false

for i in "$@"
do
  case "${i}" in
    --debug)
    DEBUG=true
    shift
    ;;
    --published)
    PUBLISHED=true
    shift
    ;;
  esac
done

sudo killall legacy_serializtion_server.exe || true
sudo killall legacy_fuzzing_server.exe || true
sudo killall ocamltestserver.exe || true
killall -9 Tests || true

./scripts/devcontainer/_wait-for-background-services postgresql
dropdb --if-exists testdb
createdb testdb

# These scripts run in the docker container. When this script is run from in the
# container, these scripts and the spawned processes stay running. this is helpful if
# you want to run the debugger in VSCode. However, if the script is run from the
# Docker host, they do not stay running, and then tests fail because the tests can't
# connect to these servers.
./scripts/run-backend-server
./scripts/run-ocaml-legacy-server
./scripts/run-ocaml-test-server
./scripts/run-nginx-server

# CLEANUP This is where the migrations are run for testdb at the moment
DARK_CONFIG_STATIC_HOST="static.darklang.localhost:${DARK_CONFIG_TEST_OCAMLSERVER_NGINX_PORT}" ./scripts/devcontainer/_wait-until-server-ready

if [[ "$PUBLISHED" == "true" ]]; then
  EXE=Build/out/Tests/Release/net6.0/linux-x64/Tests
else
  EXE=Build/out/Tests/Debug/net6.0/linux-x64/Tests
fi

# Expecto has a number of async bugs causing it to hang. It appears to be due
# to the test framework though it's hard to tell. It's solved by disabling the
# spinner and not running the tests in parallel.

cd fsharp-backend
if [[ "$DEBUG" == "true" ]]; then
  DARK_CONFIG_TELEMETRY_EXPORTER=none \
  DARK_CONFIG_ROLLBAR_ENABLED=n \
  DARK_CONFIG_DB_HOST=localhost \
  DARK_CONFIG_DB_DBNAME=testdb \
  DARK_CONFIG_DB_USER=dark \
  DARK_CONFIG_DB_PASSWORD=eapnsdc \
  lldb -- "${EXE}" --no-spinner --sequenced "${@}"
else
  DARK_CONFIG_TELEMETRY_EXPORTER=none \
  DARK_CONFIG_ROLLBAR_ENABLED=n \
  DARK_CONFIG_DB_HOST=localhost \
  DARK_CONFIG_DB_DBNAME=testdb \
  DARK_CONFIG_DB_USER=dark \
  DARK_CONFIG_DB_PASSWORD=eapnsdc \
  "${EXE}" --no-spinner --sequenced "${@}"
fi


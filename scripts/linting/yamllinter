#!/usr/bin/env bash
. ./scripts/devcontainer/_assert-in-container "$0" "$@"

set -euo pipefail

function check {
  if [[ "$1" == *"/services/"* && "$1" != *"/services/honeycomb-agent/config.yaml" && $(basename "$1") != "shipit.yaml" ]]; then
    echo "kubeval $1"
    kubeconform \
      -strict \
      -kubernetes-version 1.20.12 \
      -skip Certificate,ConfigConnector,StorageBucket,BackendConfig,CustomResourceDefinition,Issuer \
      -schema-location default \
      -schema-location 'scripts/linting/crd-schemas/{{ .ResourceKind }}{{ .KindSuffix }}.json' \
      "$1"
  else
    echo "not kubernetes so no kubeconform: $1"
  fi
  # Too big to fuck with right now
  if [[ "$1" != *"/cert-manager.yaml" ]]; then
    echo "yamllint $1"
    yamllint "$1"
  fi
}

if [[ "$#" -eq 1 ]]; then
  check "$1"
else
  echo "checking yaml files ..."
  # skip circleci for now
  # shellcheck disable=SC2038
  FILES=$(find ./* -type f \
    \( -name "*.yml" \
    -o -name "*.yaml" \) -print \
    -o -path ".git" -prune \
    -o -path "_build" -prune \
    -o -path "./_build" -prune \
    -o -path "node_modules" -prune \
    -o -path "./node_modules" -prune \
    -o -path "_esy" -prune \
    -o -path "./_esy" -prune \
    -o -path "lib" -prune \
    -o -path "./lib" -prune \
    -o -path "esy.lock" -prune \
    -o -path "./esy.lock" -prune \
    -o -path "rundir" -prune \
    -o -path "./rundir" -prune \
    -o -path "fsharp-backend/paket-files" -prune \
    -o -path "./fsharp-backend/paket-files" -prune \
    -o -path "containers/stroller/target" -prune \
    -o -path "./containers/stroller/target" -prune \
    -o -path "containers/queue-scheduler/target" -prune \
    -o -path "./containers/queue-scheduler/target" -prune \
    -o -path ".circleci/config.yml" -prune)
    for i in $FILES; do
      check $i
    done
    check .circleci/config.yml
  fi

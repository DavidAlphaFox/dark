#!/usr/bin/env bash
. ./scripts/support/assert-in-container "$0" "$@"

set -euo pipefail
set -x

# Go through the expected containers on the system and push them all to GCR

PREFIX=""
for i in "$@"
do
  case "${i}" in
    --prefix=*)
      PREFIX="${i/--prefix=/''}-"
      ;;
    *)
      echo "Unexpected argument: $i"
      exit 1
      ;;
  esac
done

PROJECT="balmy-ground-195100"

# tag containers
for dir in containers/*/; do
  c=$(basename $dir)
  NAME="${PREFIX}${c}"
  if [[ -e "${dir}/Dockerfile" ]]; then
    IMAGE_ID=$(docker images "${NAME}" -q | head -n 1)
    URL="gcr.io/${PROJECT}/${NAME}"
    IMAGE="${URL}:${IMAGE_ID}"
    IMAGE_LATEST="${URL}:latest"

    # tag the most recent local containers with their ids.
    docker tag "${NAME}:latest" "${IMAGE}"

    # tag the most recent local containers with :latest.
    docker tag "${NAME}:latest" "${IMAGE_LATEST}"
  fi
done

gcloud auth configure-docker

# push the newly-tagged images
for dir in containers/*/; do
  c=$(basename $dir)

  if [[ -e "${dir}/Dockerfile" ]]; then
    # repeats the same code, we want to make sure everything tags before we start
    # deploying
    NAME="${PREFIX}${c}"
    IMAGE_ID=$(docker images "${NAME}" -q | head -n 1)
    URL="gcr.io/${PROJECT}/${NAME}"
    IMAGE="${URL}:${IMAGE_ID}"
    IMAGE_LATEST="${URL}:latest"
    docker push "$IMAGE"
    docker push "$IMAGE_LATEST"
  fi
done

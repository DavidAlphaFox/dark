#!/usr/bin/env bash
. ./scripts/devcontainer/_assert-in-container "$0" "$@"

sudo killall nginx

# symlink so nginx logs are visible on the host
if [[ ! -f "/home/dark/app/rundir/logs/nginx-access.log" ]]; then
  sudo rm /var/log/nginx/access.log
  touch /home/dark/app/rundir/logs/nginx-access.log
  ln -s /home/dark/app/rundir/logs/nginx-access.log /var/log/nginx/access.log
fi

# symlink so nginx logs are visible on the host
if [[ ! -f "/home/dark/app/rundir/logs/nginx-error.log" ]]; then
  sudo rm /var/log/nginx/error.log
  touch /home/dark/app/rundir/logs/nginx-error.log
  ln -s /home/dark/app/rundir/logs/nginx-error.log /var/log/nginx/error.log
fi

sudo rm -f /etc/nginx/nginx.conf

# Set up each server individually, not sharing config, to match production
setup() {
  name=$1
  source=$2

  sudo rm -Rf /etc/nginx-$name/
  sudo mkdir -p /etc/nginx-$name/conf.d
  sudo ln -s `pwd`/containers/ocaml-nginx/base-nginx.conf /etc/nginx-$name/nginx.conf
  sudo ln -s `pwd`/$source/nginx.conf /etc/nginx-$name/conf.d/$name-nginx.conf
  echo "Starting nginx ($name)"
  sudo nginx -c /etc/nginx-$name/nginx.conf
  echo "Started nginx ($name)"
}


setup ocaml containers/ocaml-nginx/
setup apiserver services/apiserver-deployment/
setup bwdserver services/bwdserver-deployment/


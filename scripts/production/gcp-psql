#!/usr/bin/env bash
. ./scripts/devcontainer/_assert-in-container "$0" "$@"

set -euo pipefail

./scripts/production/gcp-authorize-kubectl
./scripts/production/_gcp-proxy-db &
# Make sure it has time to come up before we try to connect to it
sleep 1s

PORT=2346

SECRET=$(kubectl get secrets cloudsql-db-credentials -o json)

PGUSERNAME=$(echo "${SECRET}" |  jq -r '.data.username' | base64 -d)
PGPASSWORD=$(echo "${SECRET}" |  jq -r '.data.password' | base64 -d)
export PGUSERNAME
export PGPASSWORD

# If we're in a terminal (not a pipe), use pgcli, which has nice interactive features like autocomplete of columns.
# If we're in a pipe, then use psql (pgcli doesn't let you pipe in a query, psql does)
echo "Connecting to port $PORT"
psql -h localhost -p "${PORT}" --user=${PGUSERNAME} postgres "$@"

#!/usr/bin/env bash
. ./scripts/devcontainer/_assert-in-container "$0" "$@"

set -euo pipefail

# To run commands in production, we run prodexec. For security, we don't keep it
# running, just create it as needed and then delete the project when we're done.
# Creating the service happens in terraform, so this script doesn't do it.

### Exit handler to ensure we don't leave it open on the internet very long
exit_handler() {
  echo "Exit handler triggered."
  gcloud run services --region us-central1 update prodexec --ingress=internal
}

# Trap the EXIT signal
trap exit_handler EXIT


### Check if the service is running
output=$(gcloud run services list --region=us-central1 --filter="metadata.name=prodexec")
if [[ $output == *"prodexec"* ]]; then
  echo "Prodexec service running, continuing"
else
  echo "Prodexec service not running, you need to start it using terraform:"
  echo "  $ cd tf"
  echo "  $ terraform plan -var='create_prodexec=true' -out plan.out"
  echo "  $ terraform apply plan.out"
  exit 1
fi


### Prepare the data

# we have a separate username and password for the chisel, HD server, and the ssh server
username=$(gcloud secrets versions access latest --secret prodexec-chisel-username)
password=$(gcloud secrets versions access latest --secret prodexec-chisel-password)
ssh_password=$(gcloud secrets versions access latest --secret prodexec-ssh-password)

# Google won't let us reach the server unless we are authenticated
header="Authorization: Bearer $(gcloud auth print-identity-token)"

url=$(gcloud run services describe --region us-central1 prodexec --format="value(status.url)")


### Allow request to make it
gcloud run services --region us-central1 update prodexec --ingress=all


### Make the request
sshpass -p "$ssh_password" \
  ssh \
  -o ProxyCommand="chisel client --auth '$username:$password' --header '$header' '$url' stdio:%h:%p" \
 "dark@localhost"

### Disable access
gcloud run services --region us-central1 update prodexec --ingress=internal

### Disable access
echo "We're done. Please delete prodexec when you're done."
echo "  $ gcloud run services delete bwdserver"
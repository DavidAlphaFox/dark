// Most of the httpclient tests are in tests/httpclienttestfiles.

// -----------------------
// Tests that don't use the internet
// -----------------------

HttpClient.formContentType_v0 = {``Content-Type`` = "application/x-www-form-urlencoded"}

HttpClient.jsonContentType_v0 = {``Content-Type`` = "application/json; charset=utf-8"}

HttpClient.plainTextContentType_v0 = {``Content-Type`` = "text/plain; charset=utf-8"}

HttpClient.htmlContentType_v0 = {``Content-Type`` = "text/html; charset=utf-8" }

HttpClient.bearerToken_v0 "YWxhZGRpbjpvcGVuc2VzYW1l" = { Authorization = "Bearer YWxhZGRpbjpvcGVuc2VzYW1l"}

HttpClient.bearerToken_v1 "YWxhZGRpbjpvcGVuc2VzYW1l" = { Authorization = "Bearer YWxhZGRpbjpvcGVuc2VzYW1l"}

// -----------------------
// Tests which we want to try to hit the actual internet instead of our proxy server.
// -----------------------

//HttpClient::get_v5 "http://thenonexistingurlforsure.com" Dict.empty Dict.empty = Test.typeError_v0 "Couldn't reolve host name"
//HttpClient::get_v0 "https://self-signed.badssl.com" Dict.empty Dict.empty Dict.empty = Test.typeError_v0 "Internal HTTP-stack exception: Peer certificate cannot be authenticated with given CA certificates"

// Before we limited the protocols for curl, .info.error was "",
// since Httpclient.http_call checked for a 2xx HTTP code. But the file
// contents ended up in the error message. Now we've restricted the URL
// protocols, so we get CURLE_UNSUPPORTED_PROTOCOL before a request
// is even sent.
//HttpClient::get_v0 "file://localhost/etc/passwd" Dict.empty Dict.empty Dict.empty = Test.typeError_v0 ""



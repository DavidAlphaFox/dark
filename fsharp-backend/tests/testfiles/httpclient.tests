// Most of the httpclient tests are in tests/httpclienttestfiles.

// -----------------------
// Tests that don't use the internet
// -----------------------

HttpClient.formContentType_v0 = {``Content-Type`` = "application/x-www-form-urlencoded"}

HttpClient.jsonContentType_v0 = {``Content-Type`` = "application/json; charset=utf-8"}

HttpClient.plainTextContentType_v0 = {``Content-Type`` = "text/plain; charset=utf-8"}

HttpClient.htmlContentType_v0 = {``Content-Type`` = "text/html; charset=utf-8" }

HttpClient.bearerToken_v0 "YWxhZGRpbjpvcGVuc2VzYW1l" = { Authorization = "Bearer YWxhZGRpbjpvcGVuc2VzYW1l"}

HttpClient.bearerToken_v1 "YWxhZGRpbjpvcGVuc2VzYW1l" = { Authorization = "Bearer YWxhZGRpbjpvcGVuc2VzYW1l"}

HttpClient.get_v5 "{ ] nonsense ^#( :" {} {} = Error "Couldn't resolve host name" // OCAMLONLY
HttpClient.get_v5 "{ ] nonsense ^#( :" {} {} = Error "Invalid URI" // FSHARPONLY

// -----------------------
// Tests which should try to hit the actual internet
// -----------------------

// FSTODO: add these tests for all versions
HttpClient.get_v5 "http://thenonexistingurlforsure.com" {} {} = Error "Couldn't resolve host name" // OCAMLONLY
HttpClient.get_v5 "http://thenonexistingurlforsure.com" {} {} = Error "Name or service not known (thenonexistingurlforsure.com:80)" // FSHARPONLY

HttpClient.get_v5 "https://self-signed.badssl.com" {} {} = Error "SSL peer certificate or SSH remote key was not OK" // OCAMLONLY
HttpClient.get_v5 "https://self-signed.badssl.com" {} {} = Error "The SSL connection could not be established, see inner exception." // FSHARPONLY

// -----------------------
// Tests for invalid URLs which shouldnt try the internet at all
// -----------------------
HttpClient.get_v5 "/just-a-path" {} {} = Error "URL using bad/illegal format or missing URL" // OCAMLONLY
HttpClient.get_v5 "/just-a-path" {} {} = Error "Unsupported protocol" // FSHARPONLY

// FSTODO: disabling OCAML for now just to get the tests written

HttpClient.get_v5 "http://127.0.0.1" {} {} = Error "Loopback is not allowed" // FSHARPONLY
HttpClient.get_v5 "http://localhost" {} {} = Error "Loopback is not allowed" // FSHARPONLY
HttpClient.get_v5 "http://0" {} {} = Error "IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') (0.0.0.0:80)" // FSHARPONLY
HttpClient.get_v5 "http://0.0.0.0" {} {} = Error "IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address. (Parameter 'hostName') (0.0.0.0:80)" // FSHARPONLY
HttpClient.get_v5 "ftp://speedtest.tele2.net/1KB.zip" {} {} = Error "Unsupported protocol"
HttpClient.get_v5 "file:///etc/passwd" {} {} = Error "Unsupported protocol"

// Before we limited the protocols for curl, .info.error was "",
// since Httpclient.http_call checked for a 2xx HTTP code. But the file
// contents ended up in the error message. Now we've restricted the URL
// protocols, so we get CURLE_UNSUPPORTED_PROTOCOL before a request
// is even sent.
// FSTODO: add FSHARP test
HttpClient.get_v0 "file:/localhost//etc/passwd" {} {} {} = Test.typeError_v0 "Internal HTTP-stack exception: Unsupported protocol" // OCAMLONLY



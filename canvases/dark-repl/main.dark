[<HttpHandler("POST", "/get-expr-json")>]
let _handler _req =
  let requestCode = String.fromBytes request.body
  let exprJson = Experiments.parseAndSerializeExpr requestCode

  match exprJson with
  | Ok exprJson -> Http.response (String.toBytes exprJson) 200
  | Err err -> Http.response (String.toBytes err) 400


[<HttpHandler("GET", "/")>]
let _handler _req =
  let body =
    """
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Dark WASM demo</title>
    <style>
      * { font-family: Courier New, sans-serif; font-size: 26px; }
      body, html { height: 100%; margin: 0 }
      .container  { display: flex; height: 100%; }
      .container div { flex: 1; padding: 10px; }
      .textarea { width: 100%; height: 100%; resize: none; }
    </style>
  </head>

  <body>
    <div class="container">
      <div>
        <textarea id="input-textarea" class="textarea">1 + 2</textarea>
      </div>
      <div>
        <textarea id="output-textarea" class="textarea" disabled></textarea>
      </div>
    </div>

    <script src="http://dark-serve-static.dlio.localhost:11003/darklang-wasm.js"></script>
    <script>
      function setOutput (message) {
        document.getElementById("output-textarea").value = message;
      }

      (async () => {
        const darklang = await Darklang.init();

        async function doEval() {
          try {
            const response = await fetch("/get-expr-json", {
              method: "POST",
              body: document.getElementById("input-textarea").value,
            });

            if (!response.ok) {
              const errorText = await response.text();
              throw new Error("Error in parsing the expr and serializing it as JSON" + errorText);
            }

            const exprJson = await response.json();
            const result = await darklang.evalExpr(JSON.stringify(exprJson));
            setOutput(result);
          } catch (error) {
            //setOutput("Error" + error);
            console.warn("Couldn't parse", error);
          }
        }

        document.getElementById("input-textarea").addEventListener("input", async () => {
          await doEval();
        });

        await doEval();
      })();
    </script>
  </body>
</html>
  """

  Http.responseWithHeaders (String.toBytes body) (Dict.fromListOverwritingDuplicates [("Content-Type", "text/html")]) 200
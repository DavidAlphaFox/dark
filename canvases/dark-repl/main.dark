[<HttpHandler("POST", "/get-program-json")>]
let _handler _req =
  let sourceInBytes = request.body
  let program =
    Experiments.parseAndSerializeProgram (String.fromBytes sourceInBytes)

  match program with
  | Ok program ->
    let types = Option.withDefault (Dict.get_v2 program "types") "[]"
    let fns = Option.withDefault (Dict.get_v2 program "fns") "[]"
    let exprs = Option.withDefault (Dict.get_v2 program "exprs") "[]"

    let json = "{ \"types\": " ++ types ++ ", \"fns\": " ++ fns ++ ", \"exprs\": " ++ exprs ++ "}"

    Http.responseWithHeaders
      (String.toBytes json)
      (Dict.fromListOverwritingDuplicates [ ("content-type","application-json")])
      200

  | Error _err -> Http.response (String.toBytes "Couldn't parse the program") 400


[<HttpHandler("GET", "/")>]
let _handler _req =
  let body =
    """
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Dark REPL</title>
    <style>
      * { font-family: Courier New, sans-serif; font-size: 26px; background-color: black; color: white }
      body, html { height: 100%; margin: 0 }
      .container  { display: flex; height: 100%; }
      .container div { flex: 1; padding: 10px; }
      .textarea { width: 100%; height: 100%; resize: none; }
    </style>
  </head>

  <body>
    <div class="container">
      <div>
        <textarea id="input-textarea" class="textarea">type Person = {Name: String}

(Person { Name = "Joe" })
  |> fun p -> String.toLowercase_v1 p.Name</textarea>
      </div>
      <div>
        <textarea id="output-textarea" class="textarea" disabled></textarea>
      </div>
    </div>

    <script src="http://dark-serve-static.dlio.localhost:11003/editor-bootstrap.js"></script>
    <script>
      function setOutput (message) {
        document.getElementById("output-textarea").value = message;
      }

      (async () => {
        const darklang = await Darklang.init();

        async function doEval() {
          try {
            const code = document.getElementById("input-textarea").value;

            const response = await fetch("/get-program-json", {
              method: "POST",
              body: code,
            });

            if (!response.ok) {
              const errorText = await response.text();
              throw new Error("Error in parsing the expr and serializing it as JSON" + errorText);
            }

            const programJson = await response.json();
            console.log("programJson", programJson)
            const result = await darklang.evalUserProgram(JSON.stringify(programJson));
            setOutput(result);
          } catch (error) {
            //setOutput("Error" + error);
            console.warn("Couldn't parse", error);
          }
        }

        document.getElementById("input-textarea").addEventListener("input", async () => {
          await doEval();
        });

        await doEval();
      })();
    </script>
  </body>
</html>
  """

  Http.responseWithHeaders (String.toBytes body) (Dict.fromListOverwritingDuplicates [("Content-Type", "text/html")]) 200
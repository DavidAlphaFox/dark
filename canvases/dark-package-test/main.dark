let rUnwrap (result: Result<'a, 'b>) : 'a =
  match result with
  | Ok s -> s
  | Error e -> e

[<HttpHandler("GET", "/openai-completion")>]
let _handler _req =
  let result =
    (PACKAGE.OpenAI.Completion.completion "create a function that adds two numbers")
    |> rUnwrap

  PACKAGE.Darklang.Stdlib.Http.response (String.toBytes result) 200


[<HttpHandler("GET", "/openai-chat")>]
let _handler _req =
  let result =
    (PACKAGE.OpenAI.ChatCompletion.completion
      "create a function that adds two numbers")
    |> rUnwrap

  PACKAGE.Darklang.Stdlib.Http.response (String.toBytes result) 200


[<HttpHandler("GET", "/openai-chat-completion-with-role")>]
let _handler _req =
  let result =
    (PACKAGE.OpenAI.ChatCompletion.completionWithRole
      "assistant"
      "create a function that adds two numbers")
    |> rUnwrap

  PACKAGE.Darklang.Stdlib.Http.response (String.toBytes result) 200


[<HttpHandler("GET", "/openai-test-image")>]
let _handler _req =
  let result =
    (PACKAGE.OpenAI.ImageGeneration.imageGeneration "a cute cat") |> rUnwrap

  PACKAGE.Darklang.Stdlib.Http.response (String.toBytes result) 200
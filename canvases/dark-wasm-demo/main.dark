[<HttpHandler("GET", "/")>]
let _handler _req =
  let body =
    """
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Dark WASM demo</title>
  </head>

  <body>
    <div> TODO </div>

    <script src="http://dark-serve-blazor-wildly.dlio.localhost:11003/blazor.webassembly.js" autostart="false"></script>
    <script>
      // fns exposed for use by WASM'd Dark (Wasm.fsproj)
      function handleDarkResult (message) {
        console.log("handleDarkResult", message);
      }

      // set up Blazor
      Blazor.start({
        loadBootResource: function (type, name, defaultUri, integrity) {
          return `http://dark-serve-blazor-wildly.dlio.localhost:11003/${name}`;
        }
      }).then(() => {
        DotNet.invokeMethod("Wasm", "InitializeDarkRuntime");

        // TODO: fetch this from the endpoint, loading from .dark file, parsing as expr, then serializing with Json.Vanilla.serialize<>
        let exprJSON = `["EInfix",701127178,["InfixFnCall",["ArithmeticPlus"]],["EInt",558621043,1],["EInt",148400566,2]]`;
        DotNet.invokeMethod("Wasm", "LoadExpr", exprJSON);
      });

      // later... do this upon some user input
      function evalExpr() {
        DotNet.invokeMethod("Wasm", "EvalExpr");
      }
    </script>
  </body>
</html>
  """

  Http.responseWithHeaders (String.toBytes body) (Dict.fromListOverwritingDuplicates [("Content-Type", "text/html")]) 200
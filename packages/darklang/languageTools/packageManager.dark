module Darklang =
  module LanguageTools =
    /// For interacting with the `dark-packages` canvas,
    /// where package items (types, constants, fns, etc) are maintained.
    ///
    /// Of note, this is the Dev-time PackageManager, not the Runtime PackageManager.
    /// (more on this later CLEANUP)
    module PackageManager =
      // TODO: This is not the most elegant or complete solution. Revisit.
      let baseUrl () : String =
        match Builtin.environmentGet "DARK_CONFIG_PACKAGE_MANAGER_BASE_URL" with
        | Some baseUrl -> baseUrl
        | None -> "https://packages.darklang.com"

      module Type =
        // TODO: this type signature is totally wrong,
        // yet we're not complaining in the runtime type-checker?
        let existsByName (typeName: String) : Bool =
          let typ =
            Stdlib.HttpClient.request
              "GET"
              $"{baseUrl ()}/type/by-name/{typeName}"
              []
              []

          match typ with
          | Ok response -> response.statusCode == 200L
          | Error _ -> false


      module Constant =
        let existsByName (name: String) : Bool =
          let c =
            Stdlib.HttpClient.request
              "GET"
              $"{baseUrl ()}/constant/by-name/{name}"
              []
              []

          match c with
          | Ok response -> response.statusCode == 200L
          | Error _ -> false


      module Function =
        let existsByName (name: String) : Bool =
          let fn =
            Stdlib.HttpClient.request
              "GET"
              $"{baseUrl ()}/function/by-name/{name}"
              []
              []

          match fn with
          | Ok response -> response.statusCode == 200L
          | Error _ -> false
module Darklang =
  module LanguageTools =
    /// For interacting with the `dark-packages` canvas,
    /// where package items (types, constants, fns, etc) are maintained.
    ///
    /// Of note, this is the Dev-time PackageManager, not the Runtime PackageManager.
    module PackageManager =
      module Type =
        let find (typeName: String) : Stdlib.Option.Option<Uuid> =
          Builtin.packageManagerFindType typeName

        let get
          (id: Uuid)
          : Stdlib.Option.Option<ProgramTypes.PackageType.PackageType> =
          Builtin.packageManagerGetType id


      module Constant =
        let find (name: String) : Stdlib.Option.Option<Uuid> =
          Builtin.packageManagerFindConstant name

        let get
          (id: Uuid)
          : Stdlib.Option.Option<ProgramTypes.PackageConstant.PackageConstant> =
          Builtin.packageManagerGetConstant id


      module Function =
        let find (name: String) : Stdlib.Option.Option<Uuid> =
          Builtin.packageManagerFindFn name

        let get (id: Uuid) : Stdlib.Option.Option<ProgramTypes.PackageFn.PackageFn> =
          Builtin.packageManagerGetFn id

        let getAll () : List<String> = Builtin.packageManagerGetAllFns ()

      // CLEANUP: update this to a constant rather than a function, once we have support for constant records
      let pm () : ProgramTypes.PackageManager.PackageManager =
        ProgramTypes.PackageManager.PackageManager
          { findType = PackageManager.Type.find
            findConstant = PackageManager.Constant.find
            findFn = PackageManager.Function.find
            getFn = PackageManager.Function.get
            getConstant = PackageManager.Constant.get
            getType = PackageManager.Type.get
            getAllFns = PackageManager.Function.getAll }
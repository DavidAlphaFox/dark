(*

  /// A selection range represents a part of a selection hierarchy. A selection range
  /// may have a parent selection range that contains it.
  export interface SelectionRange {
    /// The {@link Range range} of this selection range.
    range: Range;

    /// The parent selection range containing this range. Therefore `parent.range` must contain `this.range`.
    parent?: SelectionRange;
  }



  export interface SelectionRangeClientCapabilities {
    /// Whether implementation supports dynamic registration for selection range providers. If this is set to `true`
    /// the client supports the new `SelectionRangeRegistrationOptions` return value for the corresponding server
    /// capability as well.
    dynamicRegistration?: boolean;
  }

  export interface SelectionRangeOptions
    extends
      WorkDoneProgressOptions {
  }

  export interface SelectionRangeRegistrationOptions
    extends
      SelectionRangeOptions,
      TextDocumentRegistrationOptions,
      StaticRegistrationOptions {
  }

  /// A parameter literal used in selection range requests.
  export interface SelectionRangeParams
    extends
      WorkDoneProgressParams,
      PartialResultParams {

    /// The text document.
    textDocument: TextDocumentIdentifier;

    /// The positions inside the text document.
    positions: Position[];
  }

  /// A request to provide selection ranges in a document. The request's
  /// parameter is of type {@link SelectionRangeParams}, the
  /// response is of type {@link SelectionRange SelectionRange[]} or a Thenable
  /// that resolves to such.
  export namespace SelectionRangeRequest {
    export const method: 'textDocument/selectionRange' = 'textDocument/selectionRange';
    export const messageDirection: MessageDirection = MessageDirection.clientToServer;
    export const type = new ProtocolRequestType<SelectionRangeParams, SelectionRange[] | null, SelectionRange[], void, SelectionRangeRegistrationOptions>(method);
    export type HandlerSignature = RequestHandler<SelectionRangeParams, SelectionRange[] | null, void>;
  }
*)
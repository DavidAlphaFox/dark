module Darklang =
  module Stdlib =
    module Bytes =

      /// Base64 decodes a string. Works with both the URL-safe and standard Base64
      /// alphabets defined in [RFC 4648](https://www.rfc-editor.org/rfc/rfc4648.html)
      /// sections [4](https://www.rfc-editor.org/rfc/rfc4648.html#section-4) and
      /// [5](https://www.rfc-editor.org/rfc/rfc4648.html#section-5).
      let base64Decode (s: String) : PACKAGE.Darklang.Stdlib.Result.Result<Bytes, String> =
        Builtin.Bytes.base64Decode s


      /// Base64URL encodes <param bytes> with {{=}} padding. Uses URL-safe encoding
      /// with {{-}} and {{_}} instead of {{+}} and {{/}}, as defined in RFC 4648
      /// section [5](https://www.rfc-editor.org/rfc/rfc4648.html#section-5).
      let base64Encode (bytes: Bytes) : String = Builtin.Bytes.base64Encode bytes


      /// Hex (Base16) encodes <param bytes> using an uppercase alphabet. Complies
      /// with [RFC 4648 section 8](https://www.rfc-editor.org/rfc/rfc4648.html#section-8).
      let hexEncode (bytes: Bytes) : String = Builtin.Bytes.hexEncode bytes


      /// Returns the number of bytes in <param bytes>
      let length (bytes: Bytes) : Int = Builtin.Bytes.length bytes
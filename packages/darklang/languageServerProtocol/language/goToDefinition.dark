(*
  /// Client Capabilities for a {@link DefinitionRequest}.
  export interface DefinitionClientCapabilities {
    /// Whether definition supports dynamic registration.
    dynamicRegistration?: boolean;

    /// The client supports additional metadata in the form of definition links.
    linkSupport?: boolean;
  }

  /// Server Capabilities for a {@link DefinitionRequest}.
  export interface DefinitionOptions
    extends
      WorkDoneProgressOptions {
  }

  /// Parameters for a {@link DefinitionRequest}.
  export interface DefinitionParams
    extends
      TextDocumentPositionParams,
      WorkDoneProgressParams,
      PartialResultParams {
  }

  /// Registration options for a {@link DefinitionRequest}.
  export interface DefinitionRegistrationOptions
    extends
      TextDocumentRegistrationOptions,
      DefinitionOptions {
  }

  /// A request to resolve the definition location of a symbol at a given text
  /// document position. The request's parameter is of type {@link TextDocumentPosition}
  /// the response is of either type {@link Definition} or a typed array of
  /// {@link DefinitionLink} or a Thenable that resolves to such.
  export namespace DefinitionRequest {
    export const method: 'textDocument/definition' = 'textDocument/definition';
    export const messageDirection: MessageDirection = MessageDirection.clientToServer;
    export const type = new ProtocolRequestType<DefinitionParams, Definition | DefinitionLink[] | null, Location[] | DefinitionLink[], void, DefinitionRegistrationOptions>(method);
  }
*)
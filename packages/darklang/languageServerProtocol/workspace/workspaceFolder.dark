(*


  export interface WorkspaceFoldersServerCapabilities {
    /// The server has support for workspace folders
    supported?: boolean;

    /// Whether the server wants to receive workspace folder
    /// change notifications.
    ///
    /// If a string is provided the string is treated as an ID
    /// under which the notification is registered on the client
    /// side. The ID can be used to unregister for these events
    /// using the `client/unregisterCapability` request.
    changeNotifications?: string | boolean;
  }

  /// The `workspace/workspaceFolders` is sent from the server to the client to fetch the open workspace folders.
  export namespace WorkspaceFoldersRequest {
    export const method: 'workspace/workspaceFolders' = 'workspace/workspaceFolders';
    export const messageDirection: MessageDirection = MessageDirection.serverToClient;
    export const type = new ProtocolRequestType0<WorkspaceFolder[] | null, never, void, void>(method);
    export type HandlerSignature = RequestHandler0<WorkspaceFolder[] | null, void>;
    export type MiddlewareSignature = (token: CancellationToken, next: HandlerSignature) => HandlerResult<WorkspaceFolder[] | null, void>;
  }



  /// The `workspace/didChangeWorkspaceFolders` notification is sent from the client to the server when the workspace
  /// folder configuration changes.
  export namespace DidChangeWorkspaceFoldersNotification {
    export const method: 'workspace/didChangeWorkspaceFolders' = 'workspace/didChangeWorkspaceFolders';
    export const messageDirection: MessageDirection = MessageDirection.clientToServer;
    export const type = new ProtocolNotificationType<DidChangeWorkspaceFoldersParams, void>(method);
    export type HandlerSignature = NotificationHandler<DidChangeWorkspaceFoldersParams>;
    export type MiddlewareSignature = (params: DidChangeWorkspaceFoldersParams, next: HandlerSignature) => void;
  }

  /// The parameters of a `workspace/didChangeWorkspaceFolders` notification.
  export interface DidChangeWorkspaceFoldersParams {
    /// The actual workspace folder change event.
    event: WorkspaceFoldersChangeEvent;
  }

  /// The workspace folder change event.
  export interface WorkspaceFoldersChangeEvent {
    /// The array of added workspace folders
    added: WorkspaceFolder[];

    /// The array of the removed workspace folders
    removed: WorkspaceFolder[];
  }
*)
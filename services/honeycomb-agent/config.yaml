honeycomb:
  existingSecret: honeycomb-account-credentials
  apiHost: https://api.honeycomb.io/

metrics:
  clusterName: darkcluster1
  dataset: kubernetes-metrics
  enabled: true
  metricGroups:
    - node
    - pod
    - container

watchers:

  # -------------
  # Main apps
  # -------------

  ## Garbage collector
  - labelSelector: "app=garbagecollector"
    containerName: garbagecollector-ctr
    dataset: kubernetes-garbagecollector
    parser: json
    processors:
      - sample:
          type: static
          rate: 10 # 1/10 sample rate

  ## Editor
  - labelSelector: "app=editor-app"
    containerName: bwd-ctr
    dataset: kubernetes-bwd-ocaml
    parser: json
    processors:
      - request_shape:
          field: handler_name
          patterns:
            - /api/:canvas/static_assets

  # -------------
  # Sidecars
  # -------------

  ## cloudsql-proxy (darklang namespace): does json logs
  - labelSelector: "app in (bwdserver-app, queueworker-app, exechost-app)"
    namespace: darklang
    containerName: cloudsql-proxy
    dataset: cloudsql-proxy
    parser: json

  ## cloudsql-proxy (default namespace)
  - labelSelector: "app in (editor-app, cronchecker, garbagecollector)"
    containerName: cloudsql-proxy
    dataset: cloudsql-proxy
    parser: json

  ## nginx sidecar (for editor, which only does static assets traffic)
  - labelSelector: "app=editor-app"
    containerName: http-proxy
    dataset: kubernetes-bwd-nginx
    parser:
      name: nginx
      dataset: kubernetes-bwd-nginx
      options:
        config_file: /etc/nginx/conf.d/nginx.conf
        log_format: '$remote_addr - $remote_user [$time_local] $host "$request" $status $bytes_sent $body_bytes_sent $request_time "$http_referer" "$http_user_agent" $request_length "$http_authorization" "$http_x_forwarded_proto" "$http_x_forwarded_for" $server_name "$upstream_http_x_darklang_execution_id" "$http_cookie" "$upstream_http_x_dark_username" "$http_x_darklang_client_version" "$upstream_http_x_darklang_server_version"'

  # -------------
  # ingress
  # -------------

  ## Nginx ingress controller for custom domains
  - labelSelector: "app.kubernetes.io/name=darkcustomdomain-nginx-ingress-controller"
    containerName: nginx-ingress-controller
    parser: nginx
    dataset: kubernetes-bwd-nginx
    processors:
      - request_shape:
          field: request


verbosity: info
# splitLogging directs trace, debug, info, and warn log levels to stdout
# rather than stderr.
splitLogging: false

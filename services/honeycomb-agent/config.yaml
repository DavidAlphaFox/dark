honeycomb:
  existingSecret: honeycomb-account-credentials
  apiHost: https://api.honeycomb.io/
metrics:
  clusterName: k8s-cluster
  dataset: kubernetes-metrics
  enabled: true
  metricGroups:
    - node
    - pod
    - container
watchers:
  - labelSelector: "app in (editor-app, qw-worker)"
    containerName: stroller
    dataset: kubernetes-stroller
    processors:
      - sample:
          type: static
          rate: 100 # 1/100 sample rate
    parser: json
  - labelSelector: "app=garbagecollector"
    containerName: garbagecollector-ctr
    dataset: kubernetes-garbagecollector
    parser: json
    processors:
      - sample:
          type: static
          rate: 10 # 1/10 sample rate
  - labelSelector: "app=scheduler-worker"
    containerName: scheduler-ctr
    dataset: kubernetes-scheduler
    parser: json
  - labelSelector: "app=editor-app"
    containerName: bwd-ctr
    dataset: kubernetes-bwd-ocaml
    parser: json
    processors:
      - request_shape:
          field: handler_name
          patterns:
            - /a/:canvas
            - /api/:canvas/save_test
            - /api/:canvas/rpc
            - /api/:canvas/add_op
            - /api/:canvas/initial_load
            - /api/:canvas/execute_function
            - /api/:canvas/get_trace_data
            - /api/:canvas/get_unlocked_dbs
            - /api/:canvas/get_worker_stats
            - /api/:canvas/get_db_stats
            - /api/:canvas/delete_404
            - /api/:canvas/static_assets
            - /canvas/:canvas/events/:event # stroller - not currently routed through nginx
  - labelSelector: "app=qw-worker"
    containerName: qw-ctr
    dataset: kubernetes-bwd-ocaml
    parser: json
  # the apiserver itself uses opentelemetry to write directly, but the legacyserver
  # still uses json logs like the rest of ocaml containers
  - labelSelector: "app in (apiserver-app, bwdserver-app, queueworker-app)"
    containerName: legacy-ctr
    dataset: kubernetes-bwd-ocaml
    parser: json
  - labelSelector: "app in (editor-app, apiserver-app)"
    containerName: http-proxy
    dataset: kubernetes-bwd-nginx
    parser:
      name: nginx
      dataset: kubernetes-bwd-nginx
      options:
        config_file: /etc/nginx/conf.d/nginx.conf
        log_format: '$remote_addr - $remote_user [$time_local] $host "$request" $status $bytes_sent $body_bytes_sent $request_time "$http_referer" "$http_user_agent" $request_length "$http_authorization" "$http_x_forwarded_proto" "$http_x_forwarded_for" $server_name "$upstream_http_x_darklang_execution_id" "$http_cookie" "$upstream_http_x_dark_username" "$http_x_darklang_client_version" "$upstream_http_x_darklang_server_version"'
    processors:
      - drop_field:
          field: http_authorization
      - drop_field:
          field: http_cookie
      - request_shape:
          field: request
          patterns:
            - /a/:canvas
            - /api/:canvas/save_test
            - /api/:canvas/rpc
            - /api/:canvas/add_op
            - /api/:canvas/initial_load
            - /api/:canvas/execute_function
            - /api/:canvas/get_trace_data
            - /api/:canvas/get_unlocked_dbs
            - /api/:canvas/get_worker_stats
            - /api/:canvas/get_db_stats
            - /api/:canvas/delete_404
            - /api/:canvas/static_assets
            - /canvas/:canvas/events/:event # stroller - not currently routed through nginx
verbosity: info
# splitLogging directs trace, debug, info, and warn log levels to stdout
# rather than stderr.
splitLogging: false

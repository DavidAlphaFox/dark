# See docs/custom-domains.md for more detail.

# This deployment runs nginx in order to terminate TLS for custom domains. It reads
# the domains from settings on the ingress and certificate data from k8s secrets
# (ending in "-tls").

# Docs: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/

# Note that in GCE, a TCP load balancer (currently
# a5457c33011e649d3800becd2b4f3291) points to this deployment and marks all the
# nodes except the ones running nginx as unhealthy. However, they're not
# actually unhealthy, it's just that there's (deliberately) not one
# pod-per-node and it doesn't know what to do with that.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: darkcustomdomain-nginx-ingress-controller
  namespace: darklang
  labels:
    app.kubernetes.io/name: darkcustomdomain-nginx-ingress-controller
    app.kubernetes.io/part-of: custom-domains
spec:
  revisionHistoryLimit: 10
  # All darkcustomdomain traffic comes through this deployment, so we may need
  # to increase this to support the traffic later.
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: darkcustomdomain-nginx-ingress-controller
      app.kubernetes.io/part-of: custom-domains
  template:
    metadata:
      namespace: darklang
      labels:
        app.kubernetes.io/name: darkcustomdomain-nginx-ingress-controller
        app.kubernetes.io/part-of: custom-domains
    spec:
      serviceAccountName: cert-manager
      # hostNetwork makes it possible to use ipv6 and to preserve the source IP correctly regardless of docker configuration
      # however, it is not a hard dependency of the nginx-ingress-controller itself and it may cause issues if port 10254 already is taken on the host
      # that said, since hostPort is broken on CNI (https://github.com/kubernetes/kubernetes/issues/31307) we have to use hostNetwork where CNI is used
      # like with kubeadm
      # hostNetwork: true
      terminationGracePeriodSeconds: 60
      containers:
        - image: k8s.gcr.io/ingress-nginx/controller:v1.0.5
          name: nginx-ingress-controller
          readinessProbe:
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 1
          ports:
            - containerPort: 80
              hostPort: 80
            - containerPort: 443
              hostPort: 443
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          args:
            - /nginx-ingress-controller
            - --publish-service=darklang/darkcustomdomain-nginx-service
            - --watch-namespace=darklang
            - --configmap=darklang/darkcustomdomain-nginx-configmap
          # Add Dark's custom template
          volumeMounts:
            - mountPath: /etc/nginx/template/nginx.tmpl
              name: nginx-template-volume
              readOnly: true
      volumes:
        - name: nginx-template-volume
          configMap:
            name: nginx-template
            items:
              - key: nginx.tmpl
                path: nginx.tmpl
